Description: add sunway support
Author: Changwei Miao <miaochangwei@uniontech.com>

---
Last-Update: 2022-07-27

--- postgresql-14-14.4.orig/src/include/storage/s_lock.h
+++ postgresql-14-14.4/src/include/storage/s_lock.h
@@ -316,12 +316,12 @@ tas(volatile slock_t *lock)
 
 
 /*
- * On ARM and ARM64, we use __sync_lock_test_and_set(int *, int) if available.
+ * On ARM, ARM64 and SUNWAY, we use __sync_lock_test_and_set(int *, int) if available.
  *
  * We use the int-width variant of the builtin because it works on more chips
  * than other widths.
  */
-#if defined(__arm__) || defined(__arm) || defined(__aarch64__) || defined(__aarch64)
+#if defined(__arm__) || defined(__arm) || defined(__aarch64__) || defined(__aarch64) || defined(__sw_64__) || defined(__sw_64)
 #ifdef HAVE_GCC__SYNC_INT32_TAS
 #define HAS_TEST_AND_SET
 
@@ -338,7 +338,7 @@ tas(volatile slock_t *lock)
 #define S_UNLOCK(lock) __sync_lock_release(lock)
 
 #endif	 /* HAVE_GCC__SYNC_INT32_TAS */
-#endif	 /* __arm__ || __arm || __aarch64__ || __aarch64 */
+#endif	 /* __arm__ || __arm || __aarch64__ || __aarch64 || __sw_64__ || __sw_64 */
 
 
 /*
--- postgresql-14-14.4.orig/contrib/pgcrypto/crypt-blowfish.c
+++ postgresql-14-14.4/contrib/pgcrypto/crypt-blowfish.c
@@ -41,7 +41,7 @@
 #ifdef __i386__
 #define BF_ASM				0	/* 1 */
 #define BF_SCALE			1
-#elif defined(__x86_64__) || defined(__alpha__) || defined(__hppa__)
+#elif defined(__x86_64__) || defined(__alpha__) || defined(__hppa__) || defined(__sw_64__)
 #define BF_ASM				0
 #define BF_SCALE			1
 #else
